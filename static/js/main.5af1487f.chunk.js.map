{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","FindMovie","onMovieAdd","useState","setTitle","setMovie","isSearched","setIsSearched","isFetching","setIsFetching","handleSearch","query","fetch","then","res","json","catch","Response","Error","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","disabled","onClick","preventDefault","find","addedMovie","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5af1487f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\n// eslint-disable-next-line max-len\nconst imagePlaceholder = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={\n            movie.imgUrl !== 'N/A'\n              ? movie.imgUrl\n              : imagePlaceholder\n          }\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = 'ec212b79';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getMovie } from '../../api';\n\nimport { Movie } from '../../types/Movie';\n\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  onMovieAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, onMovieAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isSearched, setIsSearched] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n\n  const handleSearch = () => {\n    if (isFetching) {\n      return;\n    }\n\n    setIsFetching(true);\n\n    getMovie(title)\n      .then(data => {\n        if ('Error' in data) {\n          setMovie(null);\n        } else {\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        }\n      })\n      .finally(() => {\n        setIsFetching(false);\n        setIsSearched(true);\n      });\n  };\n\n  const handleAdd = () => {\n    if (!movie) {\n      return;\n    }\n\n    const hasMovie = movies.find(\n      addedMovie => addedMovie.title === movie.title,\n    );\n\n    if (!hasMovie) {\n      onMovieAdd(movie);\n    }\n\n    setTitle('');\n    setIsSearched(false);\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={\n                classNames(\n                  'input',\n                  {\n                    'is-danger': isSearched && !movie,\n                  },\n                )\n              }\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setIsSearched(false);\n              }}\n            />\n          </div>\n\n          {isSearched && !movie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isFetching,\n                },\n              )}\n              disabled={!title || (isSearched && !movie)}\n              onClick={(event) => {\n                event.preventDefault();\n\n                if (!title) {\n                  return;\n                }\n\n                handleSearch();\n              }}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={(event) => {\n                  event.preventDefault();\n\n                  handleAdd();\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieAdd = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          onMovieAdd={handleMovieAdd}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}